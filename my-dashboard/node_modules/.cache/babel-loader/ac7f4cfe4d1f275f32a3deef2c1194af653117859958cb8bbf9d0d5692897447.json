{"ast":null,"code":"import React,{useState,useEffect}from'react';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer,BarChart,Bar}from'recharts';import'./index.css';import io from\"socket.io-client\";import ButtonGroup from'@mui/material/ButtonGroup';import Button from'@mui/material/Button';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const formatNumber=num=>{return new Intl.NumberFormat('en-US').format(num);};const StatCard=_ref=>{let{label,value}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:formatNumber(value)}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:label})]});};const Dashboard=()=>{const[data,setData]=useState([]);const[currentStats,setCurrentStats]=useState({population:0,births:0,deaths:0});const[darkMode,setDarkMode]=useState(false);const[currentRegion,setCurrentRegion]=useState(\"world\");useEffect(()=>{const socket=io(\"http://localhost:4000\");socket.on(\"populationData\",newData=>{setData(prevData=>{const updatedData=[...prevData,newData].slice(-20);setCurrentStats({population:newData.population,births:newData.births,deaths:newData.deaths});return updatedData;});});socket.on(\"disconnect\",()=>{console.log(\"Disconnected from server\");});return()=>socket.disconnect();},[]);const changeRegion=region=>{const socket=io(\"http://localhost:4000\");socket.emit(\"changeRegion\",region);setCurrentRegion(region);setData([]);};const toggleTheme=()=>{setDarkMode(!darkMode);};const themeClass=darkMode?'dark':'';return/*#__PURE__*/_jsxs(\"div\",{className:`dashboard ${themeClass}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Population Dashboard\"}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleTheme,className:\"theme-toggle\",children:darkMode?'Light Mode':'Dark Mode'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsx(StatCard,{label:\"Total Population\",value:currentStats.population}),/*#__PURE__*/_jsx(StatCard,{label:\"Births (Last Hour)\",value:currentStats.births}),/*#__PURE__*/_jsx(StatCard,{label:\"Deaths (Last Hour)\",value:currentStats.deaths})]}),/*#__PURE__*/_jsxs(ButtonGroup,{disableElevation:true,variant:\"contained\",\"aria-label\":\"Disabled button group\",className:\"buttons\",children:[/*#__PURE__*/_jsx(Button,{className:\"button\",onClick:()=>changeRegion(\"world\"),children:\"World\"}),/*#__PURE__*/_jsx(Button,{className:\"button\",onClick:()=>changeRegion(\"morocco\"),children:\"Morocco\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"charts\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Population Trend\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(LineChart,{data:data,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"time\"}),/*#__PURE__*/_jsx(YAxis,{tickFormatter:formatNumber}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"population\",stroke:\"#8884d8\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Births & Deaths\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:250,children:/*#__PURE__*/_jsxs(BarChart,{data:data,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"time\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"births\",fill:\"#413ea0\"}),/*#__PURE__*/_jsx(Bar,{dataKey:\"deaths\",fill:\"#ff7373\"})]})})]})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","BarChart","Bar","io","ButtonGroup","Button","jsx","_jsx","jsxs","_jsxs","formatNumber","num","Intl","NumberFormat","format","StatCard","_ref","label","value","className","children","Dashboard","data","setData","currentStats","setCurrentStats","population","births","deaths","darkMode","setDarkMode","currentRegion","setCurrentRegion","socket","on","newData","prevData","updatedData","slice","console","log","disconnect","changeRegion","region","emit","toggleTheme","themeClass","onClick","disableElevation","variant","width","height","strokeDasharray","dataKey","tickFormatter","type","stroke","fill"],"sources":["/home/abouzanb/task/my-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar } from 'recharts';\nimport './index.css';\nimport io from \"socket.io-client\";\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport Button from '@mui/material/Button';\nconst formatNumber = (num) => {\n  return new Intl.NumberFormat('en-US').format(num);\n};\n\nconst StatCard = ({ label, value }) => (\n  <div className=\"stat-card\">\n    <div className=\"stat-value\">{formatNumber(value)}</div>\n    <div className=\"stat-label\">{label}</div>\n  </div>\n);\n\nconst Dashboard = () => {\n  const [data, setData] = useState([]);\n  const [currentStats, setCurrentStats] = useState({\n    population: 0,\n    births: 0,\n    deaths: 0\n  });\n  const [darkMode, setDarkMode] = useState(false);\n  const [currentRegion, setCurrentRegion] = useState(\"world\");\n\n  useEffect(() => {\n    const socket = io(\"http://localhost:4000\");\n\n    socket.on(\"populationData\", (newData) => {\n      setData(prevData => {\n        const updatedData = [...prevData, newData].slice(-20);\n        setCurrentStats({\n          population: newData.population,\n          births: newData.births,\n          deaths: newData.deaths\n        });\n        return updatedData;\n      });\n    });\n\n    socket.on(\"disconnect\", () => {\n      console.log(\"Disconnected from server\");\n    });\n\n    return () => socket.disconnect();\n  }, []);\n\n  const changeRegion = (region) => {\n    const socket = io(\"http://localhost:4000\");\n    socket.emit(\"changeRegion\", region);\n    setCurrentRegion(region);\n    setData([]);\n  };\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n  };\n\n\n  const themeClass = darkMode ? 'dark' : '';\n\n  return (\n    <div className={`dashboard ${themeClass}`}>\n      <div className=\"dashboard-header\">\n        <h1>Population Dashboard</h1>\n        <button onClick={toggleTheme} className=\"theme-toggle\">\n          {darkMode ? 'Light Mode' : 'Dark Mode'}\n        </button>\n      </div>\n\n      <div className=\"stats-grid\">\n        <StatCard label=\"Total Population\" value={currentStats.population} />\n        <StatCard label=\"Births (Last Hour)\" value={currentStats.births} />\n        <StatCard label=\"Deaths (Last Hour)\" value={currentStats.deaths} />\n      </div>\n      \n\n\n\n      <ButtonGroup\n  disableElevation\n  variant=\"contained\"\n  aria-label=\"Disabled button group\"\n  className='buttons'\n>\n  <Button className='button' onClick={() => changeRegion(\"world\")}>World</Button>\n  <Button className='button'  onClick={() => changeRegion(\"morocco\")}>Morocco</Button>\n  </ButtonGroup>\n      <div className='charts'>\n              <div className=\"chart-container\">\n        <h2>Population Trend</h2>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <LineChart data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"time\" />\n            <YAxis tickFormatter={formatNumber} />\n            <Tooltip />\n            <Legend />\n            <Line type=\"monotone\" dataKey=\"population\" stroke=\"#8884d8\" />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n\n      <div className=\"chart-container\">\n        <h2>Births & Deaths</h2>\n        <ResponsiveContainer width=\"100%\" height={250}>\n          <BarChart data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"time\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"births\" fill=\"#413ea0\" />\n            <Bar dataKey=\"deaths\" fill=\"#ff7373\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n      </div>\n\n\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}